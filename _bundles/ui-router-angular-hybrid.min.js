/**
 * undefined
 * @version v3.1.2
 * @link undefined
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("angular"),require("@angular/core"),require("@angular/upgrade/static"),require("@uirouter/core"),require("@uirouter/angular"),require("@uirouter/angularjs"),require("@uirouter/rx")):"function"==typeof define&&define.amd?define(["exports","angular","@angular/core","@angular/upgrade/static","@uirouter/core","@uirouter/angular","@uirouter/angularjs","@uirouter/rx"],r):r(e["@uirouter/angular-hybrid"]=e["@uirouter/angular-hybrid"]||{},e.angular,e.ng.core,e.ng.upgrade.static,e["@uirouter/core"],e["@uirouter/angular"],e["@uirouter/angularjs"],e["@uirouter/rx"])}(this,function(e,r,t,n,u,o,i,a){"use strict";function g(e,r){return r.get(o.UIROUTER_MODULE_TOKEN,[]).forEach(function(t){return o.applyModuleConfig(e,r,t)}),e}function c(e){return e.get("$uiRouter")}function p(e){return{fqn:null,context:e.root()}}var d=r.module("ui.router.upgrade",["ui.router"]),l=function(){function e(e,t,n){var u=r.element(e.nativeElement).parent().parent();Object.defineProperty(t,"context",{get:function(){var e=u.inheritedData("$uiView");return e&&e.$cfg?e.$cfg.viewDecl.$context:n.root()},enumerable:!0}),Object.defineProperty(t,"fqn",{get:function(){var e=u.inheritedData("$uiView");return e&&e.$uiView?e.$uiView.fqn:null},enumerable:!0})}return e}();l.decorators=[{type:t.Component,args:[{selector:"ui-view-ng-upgrade",template:'<ui-view [name]="name"></ui-view>',viewProviders:[{provide:o.UIView.PARENT_INJECT,useValue:{}}]}]}],l.ctorParameters=function(){return[{type:t.ElementRef},{type:void 0,decorators:[{type:t.Inject,args:[o.UIView.PARENT_INJECT]}]},{type:u.StateRegistry}]},l.propDecorators={name:[{type:t.Input}]};var s=function(){function e(){}return e}();s.decorators=[{type:t.NgModule,args:[{imports:[o.UIRouterModule,n.UpgradeModule],declarations:[l],providers:[{provide:"$uiRouter",useFactory:c,deps:["$injector"]},{provide:u.UIRouter,useFactory:g,deps:["$uiRouter",t.Injector]},{provide:o.UIROUTER_ROOT_MODULE,useValue:{},multi:!0},{provide:o.UIView.PARENT_INJECT,useFactory:p,deps:[u.StateRegistry]}].concat(o._UIROUTER_SERVICE_PROVIDERS),entryComponents:[l],exports:[l,o.UIRouterModule]}]}],s.ctorParameters=function(){return[]},d.directive("uiViewNgUpgrade",n.downgradeComponent({component:l,inputs:["name"]})),d.run(["$injector",function(e){var r=e.get("$uiRouter");r.plugin(a.UIRouterRx);var t={get:function(r,t){var n=e.get("$$angularInjector");return e.has(r)&&e.get(r)||n.get(r,t)}},n=u.Resolvable.fromData(o.NATIVE_INJECTOR_TOKEN,t);r.stateRegistry.root().resolvables.push(n)}]),d.config(["$stateRegistryProvider",function(e){e.decorator("lazyLoad",o.ng2LazyLoadBuilder)}]),d.config(["$stateRegistryProvider",function(e){e.decorator("views",function(e,r){var t=r(e);return u.forEach(t,function(e,r){"ng1-to-ng2"!==e.$type&&"function"!=typeof e.component||(e.$type="ng1-to-ng2",e.templateProvider=null,e.template="<ui-view-ng-upgrade name='"+e.$uiViewName+"'></ui-view-ng-upgrade>")}),t})}]),d.run(["$view","$templateFactory",function(e,r){e._pluginapi._viewConfigFactory("ng2",function(e,r){return new o.Ng2ViewConfig(e,r)}),e._pluginapi._viewConfigFactory("ng1-to-ng2",function(e,t){var n=new i.Ng1ViewConfig(e,Object.assign({},t,{$type:"ng1"}),r);return[new o.Ng2ViewConfig(e,Object.assign({},t,{$type:"ng2"})),n]})}]),e.upgradeModule=d,e.UIViewNgUpgrade=l,e.uiRouterUpgradeFactory=g,e.getUIRouter=c,e.getParentUIViewInject=p,e.UIRouterUpgradeModule=s,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ui-router-angular-hybrid.min.js.map
